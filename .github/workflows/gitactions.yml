name: Deploy Multiple Terraform Modules

on:
  push:
    branches:
      - main

jobs:
  resource_group:
    runs-on: ubuntu-latest
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

    defaults:
      run:
        working-directory: Terraform/resource_group

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: '1.6.6'

      - name: Create terraform.tfvars
        run: |
          cat <<EOF > terraform.tfvars
          subscription_id = "${{ secrets.AZURE_SUBSCRIPTION_ID }}"
          client_id       = "${{ secrets.AZURE_CLIENT_ID }}"
          client_secret   = "${{ secrets.AZURE_CLIENT_SECRET }}"
          tenant_id       = "${{ secrets.AZURE_TENANT_ID }}"
          location        = "southindia"
          admin_username  = "adminuser"
          admin_password  = "${{ secrets.ADMIN_PASSWORD }}"
          EOF

      - name: Terraform Init
        run: terraform init -input=false -no-color -reconfigure

      - name: Terraform Validate
        run: terraform validate -no-color

      - name: Terraform Plan
        run: terraform plan -input=false -no-color

      - name: Terraform Apply
        run: terraform apply -auto-approve -input=false -no-color

  virtual_network:
    runs-on: ubuntu-latest
    needs: resource_group
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

    defaults:
      run:
        working-directory: Terraform/virtual_network

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: '1.6.6'

      - name: Create terraform.tfvars
        run: |
          cat <<EOF > terraform.tfvars
          subscription_id = "${{ secrets.AZURE_SUBSCRIPTION_ID }}"
          client_id       = "${{ secrets.AZURE_CLIENT_ID }}"
          client_secret   = "${{ secrets.AZURE_CLIENT_SECRET }}"
          tenant_id       = "${{ secrets.AZURE_TENANT_ID }}"
          location        = "southindia"
          admin_username  = "adminuser"
          admin_password  = "${{ secrets.ADMIN_PASSWORD }}"
          EOF

      - name: Terraform Init
        run: terraform init -input=false -no-color -reconfigure

      - name: Terraform Validate
        run: terraform validate -no-color

      - name: Terraform Plan
        run: terraform plan -input=false -no-color

      - name: Terraform Apply
        run: terraform apply -auto-approve -input=false -no-color


# name: Deploy Multiple Terraform Modules

# on:
#   push:
#     branches:
#       - main

# jobs:
#   terraform:
#     runs-on: ubuntu-latest

#     strategy:
#       matrix:
#         module:
#           - resource_group
#           - virtual_network
#           # - storage_account
#           # - appService
#           # - AppService_plan
#           # - virtual_machine
#           # # Add more modules here

#     defaults:
#       run:
#         working-directory: Terraform/${{ matrix.module }}

#     env:
#       ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
#       ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
#       ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
#       ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2

#       - name: Set up Terraform
#         uses: hashicorp/setup-terraform@v1
#         with:
#           terraform_version: '1.6.6'

#       - name: Create terraform.tfvars
#         run: |
#           cat <<EOF > terraform.tfvars
#           subscription_id = "${{ secrets.AZURE_SUBSCRIPTION_ID }}"
#           client_id       = "${{ secrets.AZURE_CLIENT_ID }}"
#           client_secret   = "${{ secrets.AZURE_CLIENT_SECRET }}"
#           tenant_id       = "${{ secrets.AZURE_TENANT_ID }}"
#           location        = "southindia"
#           admin_username  = "adminuser"
#           admin_password  = "${{ secrets.ADMIN_PASSWORD }}"
#           EOF

#       - name: Terraform Init
#         run: terraform init -input=false -no-color -reconfigure

#       - name: Terraform Validate
#         run: terraform validate -no-color

#       - name: Terraform Plan
#         run: terraform plan -input=false -no-color

#       - name: Terraform Apply
#         run: terraform apply -auto-approve -input=false -no-color
